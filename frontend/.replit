modules = ["nodejs-20", "python-3.11", "web"]
run = "npm run dev"

[nix]
channel = "stable-24_05"

[deployment]
run = ["sh", "-c", "npm run dev"]

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 8080
externalPort = 80

[[ports]]
localPort = 8081
externalPort = 8081

[[ports]]
localPort = 8082
externalPort = 3000

[workflows]
runButton = "Fixed Backend Setup"

[[workflows.workflow]]
name = "Run Backend"
author = 43148686
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python run_server.py"

[[workflows.workflow]]
name = "Run Frontend"
author = 43148686
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Full Stack Development"
author = 43148686
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py runserver 0.0.0.0:5000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Setup & Run Full Stack"
author = 43148686
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python -m pip install -r requirements.txt"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py migrate"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python create_superuser.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py runserver 0.0.0.0:5000 &"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Setup & Run School LMS"
author = 43148686
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && mkdir -p logs"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && poetry install"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py setup_school_lms"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py migrate"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py runserver 0.0.0.0:5000 &"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Complete LMS Setup"
author = 43148686
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py migrate  "

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python setup_demo_data.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py runserver 0.0.0.0:5000 &"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Complete Setup & Run"
author = 43148686
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && pip install -r requirements.txt"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations core"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations authentication"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations academic"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations attendance"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations assignments"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations behavior"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations communications"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations fees"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations notices"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations payments"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations resources"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations timetable"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py migrate"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python setup_demo_data.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py runserver 0.0.0.0:5000 &"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Backend Only"
author = 43148686
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && pip install -r requirements.txt"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py migrate"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python setup_demo_data.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py runserver 0.0.0.0:5000"

[[workflows.workflow]]
name = "Fixed Backend Setup"
author = 43148686
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && pip install -r requirements.txt"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py makemigrations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py migrate"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python setup_demo_data.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python manage.py runserver 0.0.0.0:5000 &"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
